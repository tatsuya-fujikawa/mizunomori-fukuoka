@import "normalize";
@import "color";

$basefontsize: 16;
html, body {
  padding: 0;
  margin: 0;
  scroll-behavior: smooth;
  counter-reset: accessNum;
}

$mainFont: fot-tsukuardgothic-std, sans-serif;

* {
  box-sizing: border-box;

  &::before, &::after {
    box-sizing: border-box;
  }
}

html {
  line-height: 1.6;
  letter-spacing: 0.1em;
  font-size: $basefontsize + px;
  font-family: 'Noto Sans JP', "游ゴシック体", YuGothic, "游ゴシック", "Yu Gothic", "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", sans-serif;

}

@function rem($pixels, $context: $basefontsize) { 
  @return $pixels / $context * 1rem;
}

body {
  color: var(--color-font);
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

p {
  margin: 0;
  letter-spacing: .05em;
}

a {
  text-decoration: none;
  color: inherit;
  transition: 0.3s ease;
  &:hover {
    cursor: pointer;
    opacity: 0.8;
  }
}

hr {
  background-color: #D0D3DC;
  opacity: 0.8;
}

img {
  max-width: 100%;
  height: auto;
}

:root {
  --en-font: 'roboto', sans-serif;
}

$layout-width-inner: 960px;
$breakpoints: (
  "small": "screen and (max-width: 425px)",
  "sp": "screen and (max-width: 767px)",
  "pc": "screen and (min-width: #{$layout-width-inner})"
);

@mixin mq($breakpoint: sp) {

  @media #{map-get($breakpoints, $breakpoint)} {

    @content;
  }
}

.u-spNone {
  display: none;
  @include mq('pc') {
      display: block;
  }
}

@keyframes fadeIn {
  from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes slideIn {
from { transform: translateY(15%); }
  to { transform: translateY(0); }
}

@keyframes slideOut {
  from { transform: translateY(0); }
  to { transform: translateY(-10%); }
}


